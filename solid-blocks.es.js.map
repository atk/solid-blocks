{"version":3,"file":"solid-blocks.es.js","sources":["../node_modules/solid-js/web/dist/web.js","../src/blocks/tools.ts","../src/blocks/accordion.tsx","../src/blocks/avatar.tsx","../src/blocks/bar.tsx","../src/blocks/breadcrumbs.tsx","../src/blocks/button.tsx","../src/blocks/checkbox.tsx","../src/blocks/message.tsx","../src/blocks/meter.tsx","../src/blocks/menu.tsx","../src/blocks/modal.tsx","../src/blocks/progress.tsx","../src/blocks/radio.tsx","../src/blocks/select.tsx","../src/blocks/spinner.tsx","../src/blocks/tabs.tsx","../src/blocks/tag.tsx","../src/blocks/textfield.tsx","../src/blocks/toast.tsx","../src/blocks/tooltip.tsx"],"sourcesContent":["import { createMemo, createRoot, createRenderEffect, sharedConfig, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst PropAliases = {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\n\nfunction memo(fn, equals) {\n  return createMemo(fn, undefined, !equals ? {\n    equals\n  } : undefined);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) parentNode.removeChild(a[aStart]);\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else parentNode.removeChild(a[aStart++]);\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  if (value == null || typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (prev = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}) {\n  let isCE, isProp, isChildProp;\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    if (value === prevProps[prop]) continue;\n    if (prop === \"style\") {\n      style(node, value, prevProps[prop]);\n    } else if (prop === \"classList\") {\n      classList(node, value, prevProps[prop]);\n    } else if (prop === \"ref\") {\n      value(node);\n    } else if (prop.slice(0, 3) === \"on:\") {\n      node.addEventListener(prop.slice(3), value);\n    } else if (prop.slice(0, 10) === \"oncapture:\") {\n      node.addEventListener(prop.slice(10), value, true);\n    } else if (prop.slice(0, 2) === \"on\") {\n      const name = prop.slice(2).toLowerCase();\n      const delegate = DelegatedEvents.has(name);\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n      if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n    } else {\n      const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n      if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n    }\n    prevProps[prop] = value;\n  }\n}\nfunction hydrate(code, element) {\n  sharedConfig.resources = globalThis._$HYDRATION.resources;\n  sharedConfig.completed = globalThis._$HYDRATION.completed;\n  sharedConfig.events = globalThis._$HYDRATION.events;\n  sharedConfig.context = {\n    id: \"\",\n    count: 0,\n    loadResource: globalThis._$HYDRATION.loadResource\n  };\n  sharedConfig.registry = new Map();\n  gatherHydratable(element);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction gatherHydratable(element) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    sharedConfig.registry.set(node.getAttribute(\"data-hk\"), node);\n  }\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node;\n    }\n  });\n  while (node !== null) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context && current && current.length) return current;\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else {\n      if (Array.isArray(current)) {\n        if (current.length === 0) {\n          appendNodes(parent, array, marker);\n        } else reconcileArrays(parent, current, array);\n      } else if (current == null || current === \"\") {\n        appendNodes(parent, array);\n      } else {\n        reconcileArrays(parent, multi && current || [parent.firstChild], array);\n      }\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && parent.removeChild(el);\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction Assets() {\n  return;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\n\nfunction renderToString(fn, options) {}\nfunction renderToStringAsync(fn, options) {}\nfunction pipeToNodeWritable(fn, writable, options) {}\nfunction pipeToWritable(fn, writable, options) {}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction ssrHydrationKey() {}\nfunction escape(html) {}\nfunction generateHydrationScript() {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, Assets, ChildProperties, DelegatedEvents, Dynamic, Assets as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, gatherHydratable, generateHydrationScript, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, insert, isServer, memo, pipeToNodeWritable, pipeToWritable, render, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrHydrationKey, ssrSpread, ssrStyle, style, template };\n","import { JSX, createEffect, createSignal, onCleanup, createMemo, Accessor, Setter } from \"solid-js\";\n\nexport type WrappedElement<P> = (props: P) => JSX.Element;\n\nexport const toStyleObject = (style: string | JSX.CSSProperties) => {\n  if (typeof style === \"object\") {\n    return style;\n  }\n  const styleObject: JSX.CSSProperties = {};\n  (style || \"\").replace(/([\\w-]+)\\s*:\\s*([^;]+)/g, (_, prop, value) => {\n    styleObject[prop] = value;\n    return \"\";\n  });\n  return styleObject;\n};\n\nexport const composeStyles = (...styles: (JSX.CSSProperties | string)[]) =>\n  Object.assign({}, ...styles.map(toStyleObject));\n\nexport const getNearestNode = (\n  target: EventTarget | null | undefined,\n  name: string\n): Node | null | undefined => {\n  if (!target) {\n    return;\n  }\n  let nearest: Node & ParentNode | null = target as Node & ParentNode;\n  while (nearest && nearest.nodeName !== name) {\n    nearest = nearest.parentNode;\n  }\n  return nearest;\n};\n\nexport const maxRandom = 8;\nlet lastItem = 0;\nexport const getRandom = () => {\n  const nextItem =\n    1 + Math.floor(Math.random() * (maxRandom - (lastItem ? 1 : 0)));\n  lastItem = lastItem ? nextItem + (nextItem === lastItem ? 1 : 0) : nextItem;\n  return lastItem;\n};\n\ntype MediaQueryItem = \n  |'all'\n  | 'print'\n  | 'screen' \n  | `(${'min-' | 'max-' | ''}${\n    | 'aspect-ratio'\n    | 'color'\n    | 'color-gamut'\n    | 'color-index'\n    | 'display-mode'\n    | 'grid'\n    | 'inverted-colors'\n    | 'height'\n    | 'orientation'\n    | 'pointer'\n    | `prefers-${'color-scheme' | 'contrast' | 'reduced-motion' | 'reduced-transparency'}`\n    | 'resolution'\n    | 'scan'\n    | 'width'\n  }: ${string})`;\ntype MediaQueryOperator = ' and ' | ' not ' | ' only ' | ', ';\ntype MediaQueryString = \n  | MediaQueryItem\n  | `${MediaQueryItem}${MediaQueryOperator}${MediaQueryItem}`\n\nexport const useMediaQuery = (query: MediaQueryString): Accessor<boolean> => {\n  const matcher = window.matchMedia(query);\n  const [matches, setMatches] = createSignal(matcher.matches);\n\n  const changeHandler = (ev: MediaQueryListEvent) => setMatches(ev.matches);\n  matcher.addEventListener('change', changeHandler);\n  onCleanup(() => matcher.removeEventListener('change', changeHandler));\n\n  return matches\n}\n\nconst parseStorage = <T extends any | string>(data: string | null | undefined, useJson: boolean): T | undefined =>\n  useJson ? (data ? JSON.parse(data) : undefined) : data ?? undefined;\n\nconst putStorage = <T extends any | string>(key: string, data: T): void =>\n  localStorage.setItem(key, typeof data === 'string' ? data : JSON.stringify(data))\n\nexport function createLocalStorageSignal<T extends any | string>(key: string, initialValue?: T, useJson = false):\n  [Accessor<T | undefined>, Setter<T | undefined>] {\n  if (localStorage.getItem(key) === null && initialValue !== undefined) {\n    putStorage(key, initialValue);\n  }\n  const [value, setValue] = createSignal(parseStorage<T>(localStorage.getItem(key), useJson));\n  \n  createEffect(() =>\n    useJson && value() === undefined\n    ? localStorage.removeItem(key)\n    : putStorage(key, value())\n  );\n  \n  return [value, setValue];\n}\n\nexport const useDarkMode = (localStorageKey = \"COLOR_SCHEME\") => {\n  const mediaQueryPrefersDark = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [storedPrefersDark, setStoredPrefersDark] = createLocalStorageSignal<boolean>(localStorageKey, undefined, true);\n  const darkMode = createMemo(() => storedPrefersDark() ?? mediaQueryPrefersDark());\n\n  createEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode())\n  });\n\n  return [darkMode, setStoredPrefersDark];\n};\n\nexport type NodeName = string;\n\nexport const getElements = (\n  children: JSX.Element | ((...args: any[]) => JSX.Element),\n  filter?: NodeName | ((node: HTMLElement) => boolean),\n  /** if the children contains a callback, you may add an array of props */\n  props: any = [],\n  /** you can add prepended results if you want */\n  result = []\n): HTMLElement[] | undefined => {\n  if (!children) {\n    return;\n  }\n  if (Array.isArray(children)) {\n    children.forEach((child) => getElements(child, filter, props, result));\n  } else if (typeof children === \"function\") {\n    getElements(children.apply(null, props), filter, props, result);\n  } else {\n    const node = children as HTMLElement;\n    if (\n      !filter || (typeof filter === \"function\" ? filter(node) : node.nodeName === filter)\n    ) {\n      (result as HTMLElement[]).push(node);\n    }\n  }\n  return result;\n};\n","import {\n  Component,\n  createMemo,\n  createSignal,\n  JSX,\n  mergeProps,\n  onCleanup,\n  onMount,\n  splitProps,\n} from \"solid-js\";\nimport { getNearestNode, WrappedElement } from \"./tools\";\n\nimport \"./base.css\";\nimport \"./accordion.css\";\n\nexport type AccordionProps = Omit<\n  JSX.HTMLAttributes<HTMLDetailsElement>,\n  \"children\"\n> & {\n  children: WrappedElement<boolean> | JSX.Element;\n  open?: boolean;\n  ontoggle?: (open: boolean) => void;\n};\n\nexport const Accordion: Component<AccordionProps> = (props) => {\n  const [local, detailsProps] = splitProps(props, [\"children\", \"ontoggle\"]);\n  const [open, setOpen] = createSignal(!!props.open);\n  let detailsRef!: HTMLDetailsElement;\n  const children = createMemo(() =>\n    typeof props.children === \"function\"\n      ? props.children(open())\n      : props.children\n  );\n\n  const toggleHandler = () => {\n    if (detailsRef) {\n      setOpen(detailsRef.open);\n      local.ontoggle?.(detailsRef.open);\n    }\n  };\n\n  onMount(() => detailsRef?.addEventListener(\"toggle\", toggleHandler));\n  onCleanup(() => detailsRef?.addEventListener(\"toggle\", toggleHandler));\n\n  return (\n    <details\n      ref={detailsRef}\n      {...detailsProps}\n      classList={mergeProps(props.classList ?? {}, { \"sb-accordion\": true })}\n      open={!!props.open}\n    >\n      {children()}\n    </details>\n  );\n};\n\nexport type AccordionHeaderProps = JSX.HTMLAttributes<HTMLElement>;\n\nexport const AccordionHeader: Component<AccordionHeaderProps> = (props) => (\n  <summary\n    classList={mergeProps(props.classList ?? {}, {\n      \"sb-accordion-header\": true,\n    })}\n  >\n    {props.children}\n  </summary>\n);\n\nexport type AccordionGroupProps = JSX.HTMLAttributes<HTMLElement> & {\n  allowMultiple?: boolean;\n  allowToggle?: boolean;\n};\n\nexport const AccordionGroup: Component<AccordionGroupProps> = (props) => {\n  const [local, divProps] = splitProps(props, [\"allowMultiple\", \"allowToggle\"]);\n  const clickHandler = createMemo(() => (ev: MouseEvent) => {\n    if (!ev.target) {\n      return;\n    }\n    const details = getNearestNode(ev.target, \"DETAILS\") as\n      | HTMLDetailsElement\n      | undefined;\n    if (!details) {\n      return;\n    }\n    const open = details.parentNode?.querySelectorAll(\n      \"details.sb-accordion[open]\"\n    ) ?? [];\n    if (open.length === 0) {\n      return;\n    }\n\n    if (!local.allowMultiple && !details.open) {\n      Array.prototype.forEach.call(open, (item) => {\n        if (item !== details) {\n          item.removeAttribute(\"open\");\n        }\n      });\n    }\n    if (!local.allowToggle && details.open && open.length === 1) {\n      ev.preventDefault();\n    }\n  });\n  const keyupHandler = createMemo(() => (ev: KeyboardEvent) => {\n    const details = getNearestNode(ev.target, \"DETAILS\");\n    if (!details || !details.parentNode) {\n      return;\n    }\n    const grouped: NodeListOf<HTMLDetailsElement> =\n      details.parentNode.querySelectorAll(\"details.sb-accordion\");\n    const index = Array.prototype.indexOf.call(grouped, details);\n    if (index === -1) {\n      return;\n    }\n    if (ev.key === \"ArrowLeft\" && index !== 0) {\n      const detail = grouped[index - 1];\n      const summary = detail.querySelector(\"summary\");\n      summary?.focus();\n      !detail.open && summary?.click();\n    }\n    if (ev.key === \"ArrowRight\" && index + 1 < grouped.length) {\n      const detail = grouped[index + 1];\n      const summary = detail.querySelector(\"summary\");\n      summary?.focus();\n      !detail.open && summary?.click();\n    }\n  });\n  return (\n    <section\n      {...divProps}\n      classList={mergeProps(props.classList ?? {}, {\n        \"sb-accordion-group\": true,\n      })}\n      onclick={clickHandler()}\n      onkeyup={keyupHandler()}\n    />\n  );\n};\n","import { Component, JSX, createMemo, splitProps, mergeProps } from \"solid-js\";\nimport { composeStyles, getRandom } from \"./tools\";\nimport \"./base.css\";\nimport \"./avatar.css\";\n\nexport type AvatarProps = {\n  img?: string;\n  name?: string;\n  fallback?: JSX.Element;\n  plus?: number;\n} & JSX.HTMLAttributes<HTMLDivElement>;\n\nconst char =\n  \"[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u0484\\u0487-\\u052F\\u1C80-\\u1C88\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2071\\u207F\\u2090-\\u209C\\u2126\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uA722-\\uA787\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uFB00-\\uFB06\\uFE2E\\uFE2F\\uFF21-\\uFF3A\\uFF41-\\uFF5A]|\\uD800[\\uDD40-\\uDD8E\\uDDA0]|\\uD834[\\uDE00-\\uDE45]\";\nconst initialsRegexp = new RegExp(`^.*?(${char})(?:.*\\\\s+\\\\S*?(${char}))?.*$`);\n\nexport const getInitials = (name: string) =>\n  name\n    // remove superfluous spaces and stuff in brackets\n    .replace(/^\\s+|\\(.*?\\)|\\{.*?\\}|\\[.*\\]|<.*?>|\\s+$/g, \"\")\n    // find first char of the first name and the last name\n    .replace(initialsRegexp, \"$1$2\")\n    .toUpperCase();\n\nexport const Avatar: Component<AvatarProps> = (props) => {\n  const [local, divProps] = splitProps(props, [\n    \"classList\",\n    \"children\",\n    \"img\",\n    \"name\",\n    \"fallback\",\n  ]);\n  const initials = createMemo(() =>\n    local.name ? getInitials(local.name) : \"\"\n  );\n\n  if (local.img) {\n    return (\n      <div\n        classList={mergeProps(local.classList ?? {}, { \"sb-avatar\": true })}\n        role=\"figure\"\n        data-random={getRandom()}\n        {...divProps}\n      >\n        <img src={local.img} alt={local.name} />\n        <span aria-hidden=\"true\">{initials}</span>\n        {local.children}\n      </div>\n    );\n  }\n  if (local.name) {\n    return (\n      <div\n        classList={mergeProps(local.classList ?? {}, { \"sb-avatar\": true })}\n        role=\"img\"\n        aria-label={local.name}\n        data-random={getRandom()}\n        {...divProps}\n      >\n        {initials}\n        {local.children}\n      </div>\n    );\n  }\n  return (\n    <div\n      classList={mergeProps(local.classList ?? {}, { \"sb-avatar\": true })}\n      role=\"img\"\n      data-random={getRandom()}\n      aria-label=\"Unknown\"\n      {...divProps}\n    >\n      {local.fallback ?? \"?\"}\n      {local.children}\n    </div>\n  );\n};\n\nexport type AvatarBadgeProps = {\n  borderColor?: string;\n  background?: string;\n} & JSX.HTMLAttributes<HTMLSpanElement>;\n\nexport const AvatarBadge: Component<AvatarBadgeProps> = (props) => {\n  const [local, spanProps] = splitProps(props, [\n    \"classList\",\n    \"borderColor\",\n    \"background\",\n    \"style\",\n  ]);\n  const composedStyle = composeStyles(local.style ?? {}, {\n    \"border-color\": local.borderColor,\n    background: local.background,\n  });\n\n  return (\n    <span\n      classList={mergeProps(local.classList ?? {}, { \"sb-badge\": true })}\n      {...spanProps}\n      style={composedStyle}\n    />\n  );\n};\n\nexport type AvatarGroupProps = JSX.HTMLAttributes<HTMLDivElement> & {\n  \"data-plus\"?: string;\n};\n\nexport const AvatarGroup: Component<AvatarGroupProps> = (props) => (\n  <div\n    {...props}\n    classList={mergeProps(props.classList ?? {}, { \"sb-badge\": true })}\n    role=\"group\"\n    aria-haspopup={Array.isArray(props.children) && props.children.length > 3}\n  />\n);\n","import { Component, JSX, mergeProps, splitProps } from \"solid-js\";\nimport { Portal } from \"solid-js/web\";\n\nimport \"./base.css\";\nimport \"./bar.css\";\n\nexport type BarProps = JSX.HTMLAttributes<HTMLDivElement> & {\n  mount?: HTMLElement;\n  placement?: \"top\" | \"right\" | \"bottom\" | \"left\";\n  position?: Omit<JSX.CSSProperties[\"position\"], \"static\">;\n  portal?: boolean;\n};\n\nexport const Bar: Component<BarProps> = (props) => {\n  const [local, rest] = splitProps(props, [\n    \"placement\",\n    \"position\",\n    \"mount\",\n    \"portal\",\n  ]);\n  const divProps = mergeProps(rest, {\n    class: `${local.placement}${\n      local.position ? \" \" + local.position : \"\"\n    } sb-bar ${props.class ? \" \" + props.class : \"\"}`,\n  });\n  return local.portal === false ? (\n    <div {...divProps} />\n  ) : (\n    <Portal mount={local.mount}>\n      <div {...divProps} />\n    </Portal>\n  );\n};\n","import { Component, JSX, For } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./breadcrumbs.css\";\n\nexport type BreadcrumbsProps = JSX.HTMLAttributes<HTMLOListElement> & {\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const Breadcrumbs: Component<BreadcrumbsProps> = (props) => (\n  <nav class=\"sb-breadcrumbs\">\n    <ol {...props}>\n      <For\n        each={Array.isArray(props.children) ? props.children : [props.children]}\n      >\n        {(item) => <li>{item}</li>}\n      </For>\n    </ol>\n  </nav>\n);\n","import { Component, JSX, mergeProps, splitProps } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./button.css\";\n\nexport type ButtonProps = JSX.HTMLAttributes<HTMLButtonElement> & {\n  variant?: \"primary\" | \"secondary\" | \"link\" | \"icon\";\n};\n\nexport const Button: Component<ButtonProps> = (props) => {\n  const [local, buttonProps] = splitProps(props, [\"variant\", \"classList\"]);\n\n  return (\n    <button\n      {...buttonProps}\n      classList={mergeProps(local.classList ?? {}, {\n        \"sb-button\": true,\n        [local.variant ?? \"primary\"]: true,\n      })}\n    />\n  );\n};\n","import { Component, JSX, splitProps, Show } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./checkbox.css\";\n\nexport type CheckboxProps = Omit<\n  JSX.HTMLAttributes<HTMLLabelElement> & JSX.HTMLAttributes<HTMLInputElement>,\n  \"onchange\"\n> & {\n  /**\n   * align the checkbox inside its label\n   * can be 'left' or 'right; default is 'left'\n   */\n  align?: \"left\" | \"right\";\n  autofocus?: boolean;\n  checked?: boolean;\n  disabled?: boolean;\n  name?: string;\n  onchange?: (checked: boolean) => void;\n  oninvalid?: JSX.EventHandler<HTMLInputElement, Event>;\n  required?: boolean;\n  switch?: boolean;\n  value?: string;\n};\n\nexport const Checkbox: Component<CheckboxProps> = (props) => {\n  const [inputProps, content, labelProps] = splitProps(\n    props,\n    [\n      \"accessKey\",\n      \"aria-disabled\",\n      \"autofocus\",\n      \"checked\",\n      \"class\",\n      \"disabled\",\n      \"id\",\n      \"name\",\n      \"onclick\",\n      \"onkeydown\",\n      \"onkeypress\",\n      \"onkeyup\",\n      \"oninvalid\",\n      \"required\",\n      \"value\",\n    ],\n    [\"align\", \"children\", \"onchange\", \"switch\"]\n  );\n\n  const changeHandler = (ev: Event) => content.onchange?.((ev.target as HTMLInputElement)?.checked);\n\n  return (\n    <label\n      class={`${content.align || \"left\"} ${\n        content.switch ? \" switch\" : \"\"\n      } sb-checkbox`}\n      {...labelProps}\n    >\n      <Show when={content.align === \"right\"}>{content.children}</Show>\n      <input\n        type=\"checkbox\"\n        role={content.switch ? \"switch\" : undefined}\n        {...inputProps}\n        onchange={changeHandler}\n      />\n      <Show when={content.align !== \"right\"}>{content.children}</Show>\n    </label>\n  );\n};\n","import { Component, JSX, createMemo, splitProps } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./message.css\";\n\nexport type MessageProps = {\n  type: \"success\" | \"info\" | \"warning\" | \"error\";\n  inline?: boolean;\n} & JSX.HTMLAttributes<HTMLDivElement>;\n\nexport const Message: Component<MessageProps> = (props) => {\n  const [messageProps, divProps] = splitProps(props, [\n    \"type\",\n    \"class\",\n    \"inline\",\n  ]);\n  const className = createMemo(() =>\n    [\n      ...new Set(\n        [\n          \"sb-message\",\n          messageProps.type,\n          messageProps.class,\n          messageProps.inline && \"inline\",\n        ].filter(Boolean)\n      ),\n    ].join(\" \")\n  );\n\n  return (\n    <p\n      class={className()}\n      role={messageProps.type === \"error\" ? \"alert\" : undefined}\n      {...divProps}\n    />\n  );\n};\n","import { Component, JSX } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./meter.css\";\n\nexport type MeterProps = JSX.HTMLAttributes<HTMLDivElement> & {\n  min?: number | string;\n  max?: number | string;\n  value?: number | string;\n};\n\nexport const Meter: Component<MeterProps> = (props) => (\n  <div\n    {...props}\n    role={\n      \"meter\" as MeterProps[\"role\"] /* https://github.com/ryansolid/dom-expressions/pull/79 */\n    }\n    class={props.class ? `sb-meter ${props.class}` : \"sb-meter\"}\n    aria-valuenow={props.value ?? props[\"aria-valuenow\"]}\n    aria-valuemin={props.min ?? props[\"aria-valuemin\"]}\n    aria-valuemax={props.max ?? props[\"aria-valuemax\"]}\n  >\n    <svg\n      aria-hidden=\"true\"\n      viewBox={`0 0 ${props.max ?? props[\"aria-valuemax\"]} 10`}\n    >\n      <rect\n        x=\"0\"\n        y=\"0\"\n        height=\"10\"\n        width={props.value ?? props[\"aria-valuenow\"] ?? 0}\n      />\n    </svg>\n    {props.children}\n  </div>\n);\n","import {\n  Accessor,\n  JSX,\n  Component,\n  onMount,\n  onCleanup,\n  createSignal,\n  createMemo,\n  createContext,\n  useContext,\n  splitProps,\n  createEffect,\n  Show,\n} from \"solid-js\";\nimport { Button, ButtonProps } from \"./button\";\nimport { getElements } from \"./tools\";\n\nimport \"./base.css\";\nimport \"./menu.css\";\nimport { isServer } from \"solid-js/web\";\n\nexport type MenuProps = JSX.HTMLAttributes<HTMLDivElement> & {\n  open?: boolean;\n  ontoggle?: (open?: boolean) => void;\n  align?: \"left\" | \"center\" | \"right\";\n};\n\nconst getFirstMenuButton = (open: Accessor<boolean>) => {\n  let counter = 0;\n  return (node: HTMLElement) => {\n    const isButton =\n      node.nodeName === \"BUTTON\" || node.getAttribute(\"role\") === \"button\";\n    const isMenuButton =\n      isButton && node.getAttribute(\"aria-haspopup\") === \"menu\";\n    const isFirstMenuButton = isMenuButton && counter++ === 0;\n    if (isFirstMenuButton) {\n      if (open() && node.getAttribute(\"aria-expanded\") !== \"true\") {\n        node.setAttribute(\"aria-expanded\", \"true\");\n      } else if (!open() && node.getAttribute(\"aria-expanded\") === \"true\") {\n        node.setAttribute(\"aria-expanded\", \"false\");\n      }\n    }\n    return isFirstMenuButton;\n  };\n};\n\nconst getMenuItems = () => {\n  let counter = 0;\n  return (node: HTMLElement) => {\n    const isButton =\n      node.nodeName === \"BUTTON\" || node.getAttribute(\"role\") === \"button\";\n    const isMenuButton =\n      isButton && node.getAttribute(\"aria-haspopup\") === \"menu\";\n    const isFirstMenuButton = isMenuButton && counter++ === 0;\n    return !isFirstMenuButton;\n  };\n};\n\nexport const Menu: Component<MenuProps> = (props) => {\n  const [open, setOpen] = createSignal(!!props.open);\n  const [local, divProps] = splitProps(props, [\n    \"open\",\n    \"children\",\n    \"ontoggle\",\n    \"align\",\n  ]);\n  const opener = createMemo<HTMLElement | undefined>(\n    () => (getElements(props.children, getFirstMenuButton(open), [open()]) ?? [])[0]\n  );\n  const menuItems = createMemo(() =>\n    getElements(props.children, getMenuItems(), [open()]) ?? []\n  );\n\n  let menuRef!: HTMLDivElement;\n\n  createEffect(() => {\n    const visible = open();\n    local.ontoggle?.(visible);\n    if (visible) {\n      menuItems()[0].focus();\n    }\n  });\n\n  const clickHandler = (ev: MouseEvent) => {\n    const target = ev.target as HTMLElement;\n    const role = target?.getAttribute(\"role\");\n    const button = opener();\n    if (!ev.defaultPrevented && button) {\n      if (ev.target === button) {\n        setOpen(\n          (open) => !open && button.getAttribute(\"aria-disabled\") !== \"true\"\n        );\n      } else if (\n        !button.contains(target) &&\n        role !== \"menuitemradio\" &&\n        role !== \"menuitemcheckbox\"\n      ) {\n        setOpen(false);\n      }\n    }\n  };\n\n  onMount(() => !isServer && document.addEventListener(\"click\", clickHandler, { capture: false }));\n  onCleanup(() => !isServer && document.removeEventListener(\"click\", clickHandler));\n\n  let focusItem: HTMLElement | undefined;\n  const overHandler = (ev: MouseEvent) => {\n    const target = ev.target as HTMLElement;\n    if (\n      [\"menuitem\", \"menuitemradio\", \"menuitemcheckbox\"].includes(\n        target?.getAttribute(\"role\") ?? ''\n      ) &&\n      target?.tabIndex !== -1 &&\n      target?.getAttribute(\"aria-disabled\") !== \"true\"\n    ) {\n      focusItem = target;\n      focusItem?.focus();\n    }\n  };\n\n  const moveFocus = (step: 1 | -1) => {\n    const menuItems = menuRef.querySelectorAll<HTMLElement>(\n      '[role^=menuitem]:not([aria-disabled], [tabIndex=\"-1\"])'\n    );\n    const currentPos = focusItem\n      ? Array.prototype.findIndex.call(menuItems, (item) => item === focusItem)\n      : -1;\n    const newPos =\n      currentPos === -1\n        ? 1\n        : (menuItems.length + step + currentPos) % menuItems.length;\n    focusItem = menuItems[newPos];\n    focusItem.focus();\n  };\n\n  const keyHandler = (ev: KeyboardEvent) => {\n    const target = ev.target as HTMLElement;\n    if (ev.key === \"Escape\" && open()) {\n      setOpen(false);\n      opener()?.focus();\n    }\n    const role = target?.getAttribute(\"role\");\n    if (\n      ev.key === \" \" &&\n      [\"menuitem\", \"menuitemradio\", \"menuitemcheckbox\"].includes(role ?? '')\n    ) {\n      target.click();\n      if (role === \"menuitemradio\") {\n        const radios = target.parentNode?.querySelectorAll<HTMLElement>(\n          '[role=\"menuitemradio\"]:not([aria-disabled], [tabIndex=\"-1\"]'\n        ) ?? [];\n        const currentPos = Array.prototype.indexOf.call(radios, target);\n        const newPos = (radios.length + 1 + currentPos) % radios.length;\n        focusItem = radios[newPos];\n        focusItem?.focus();\n      }\n      ev.preventDefault();\n    }\n    if (ev.key === \"ArrowDown\") {\n      moveFocus(1);\n      ev.preventDefault();\n    } else if (ev.key === \"ArrowUp\") {\n      moveFocus(-1);\n      ev.preventDefault();\n    }\n  };\n\n  return (\n    <div\n      ref={menuRef}\n      {...divProps}\n      class={`sb-menu${divProps.class ? \" \" + divProps.class : \"\"}${\n        local.align ? \" \" + local.align : \"\"\n      }`}\n      onkeydown={keyHandler}\n    >\n      {opener()}\n      <div tabIndex=\"-1\" role=\"menu\" hidden={!open()} onmouseover={overHandler}>\n        {menuItems()}\n      </div>\n    </div>\n  );\n};\n\nexport type MenuButtonProps = ButtonProps;\n\nexport const MenuButton: Component<MenuButtonProps> = (props) => (\n  <Button {...props} aria-haspopup=\"menu\" />\n);\n\nexport type MenuItemProps = JSX.HTMLAttributes<HTMLDivElement>;\n\nexport const MenuItem: Component<MenuItemProps> = (props) => (\n  <div tabIndex=\"0\" {...props} role=\"menuitem\" />\n);\n\nexport type MenuItemGroupProps = JSX.HTMLAttributes<HTMLDivElement> & {\n  title?: JSX.Element;\n};\n\nexport const MenuItemGroup: Component<MenuItemGroupProps> = (props) => {\n  const [local, divProps] = splitProps(props, [\"title\", \"children\"]);\n  return (\n    <div {...divProps} role=\"group\">\n      <Show when={typeof props.title === \"string\"} fallback={local.title}>\n        <p>{local.title}</p>\n      </Show>\n      {local.children}\n    </div>\n  );\n};\n\nexport type MenuOptionsContextValue = [\n  value: Accessor<string[]>,\n  change: (value: string) => void,\n  type?: \"checkbox\" | \"radio\"\n];\n\nexport const MenuOptionsContext = createContext<MenuOptionsContextValue>([\n  () => [],\n  (value) => console.warn(\"context default!\", value),\n]);\n\nexport type MenuOptionProps = Omit<\n  JSX.HTMLAttributes<HTMLDivElement>,\n  \"onchange\"\n> & {\n  onchange?: (checked?: boolean) => void;\n  value: string;\n};\n\nexport const MenuOption: Component<MenuOptionProps> = (props) => {\n  const [local, divProps] = splitProps(props, [\"value\", \"onchange\"]);\n  const [value, change, type] = useContext(MenuOptionsContext);\n  const selected = createMemo(() => value().includes(props.value));\n  const clickHandler = createMemo(\n    () => () => props[\"aria-disabled\"] !== \"true\" && change(props.value)\n  );\n  const keyHandler = createMemo(() => (ev: KeyboardEvent) => {\n    if (ev.key === \" \") {\n      ev.preventDefault();\n      props[\"aria-disabled\"] !== \"true\" && change(props.value);\n    }\n  });\n\n  createEffect(() => {\n    props.onchange?.(selected());\n  });\n\n  return (\n    <div\n      aria-selected={selected()}\n      tabIndex={\n        (type === \"checkbox\" || !selected()) &&\n        props[\"aria-disabled\"] !== \"true\"\n          ? \"0\"\n          : \"-1\"\n      }\n      {...divProps}\n      role={type !== \"checkbox\" ? \"menuitemradio\" : \"menuitemcheckbox\"}\n      onclick={clickHandler()}\n      onkeypress={keyHandler()}\n    />\n  );\n};\n\nexport type MenuOptionGroupProps = Omit<\n  JSX.HTMLAttributes<HTMLDivElement>,\n  \"onchange\"\n> &\n  (\n    | {\n        type: \"checkbox\";\n        onchange?: (value: string[]) => void;\n        title?: JSX.Element;\n        value?: string[];\n      }\n    | {\n        type?: \"radio\" | undefined;\n        onchange?: (value: string) => void;\n        title?: JSX.Element;\n        value?: [string] | string;\n      }\n  );\n\nexport const MenuOptionGroup = (props: MenuOptionGroupProps): JSX.Element => {\n  const [local, divProps] = splitProps(props, [\n    \"title\",\n    \"value\",\n    \"onchange\",\n    \"children\",\n    \"type\",\n  ]);\n  const [value, setValue] = createSignal(\n    Array.isArray(local.value) ? local.value : local.value ? [local.value] : [],\n    {\n      equals: (prev, next) =>\n        prev.length === next.length && prev[0] === next[0],\n    }\n  );\n  const change = createMemo<(value: string) => void>(() =>\n    props.type === \"checkbox\"\n      ? (value) =>\n          setValue((prev) =>\n            prev.includes(value)\n              ? prev.filter((item) => item !== value)\n              : [...prev, value]\n          )\n      : (value) => setValue((prev) => (prev[0] === value ? prev : [value]))\n  );\n\n  createEffect((lastVal) => {\n    if (lastVal !== local.value) {\n      setValue(\n        Array.isArray(local.value)\n          ? local.value\n          : local.value\n          ? [local.value]\n          : []\n      );\n    }\n    return local.value;\n  }, local.value);\n\n  createEffect((lastVal) => {\n    const newVal = value();\n    if (\n      props.type === \"checkbox\"\n        ? newVal.length === lastVal.length\n        : newVal[0] === lastVal[0]\n    ) {\n      return lastVal;\n    }\n    props.type === \"checkbox\"\n      ? props.onchange?.(newVal)\n      : props.onchange?.(newVal[0]);\n    return newVal;\n  }, value());\n\n  return (\n    <div tabIndex=\"-1\" role=\"group\" {...divProps}>\n      <Show when={typeof props.title === \"string\"} fallback={local.title}>\n        <p>{local.title}</p>\n      </Show>\n      <MenuOptionsContext.Provider value={[value, change(), local.type]}>\n        {local.children}\n      </MenuOptionsContext.Provider>\n    </div>\n  );\n};\n","import {\n  Accessor,\n  Component,\n  JSX,\n  splitProps,\n  createEffect,\n  createSignal,\n  createMemo,\n  mergeProps,\n  Switch,\n  Match,\n} from \"solid-js\";\nimport { Portal } from \"solid-js/web\";\n\nimport \"./base.css\";\nimport \"./modal.css\";\nimport { getElements, WrappedElement } from \"./tools\";\n\ntype WrappedModalContentProps = {\n  open: Accessor<boolean>;\n  /**\n   * toggle\n   *\n   * if called with boolean argument, it will set the open state\n   * according to the argument, otherwise toggle it\n   */\n  toggle: (open?: boolean | unknown) => void;\n};\n\nexport type ModalProps = Omit<\n  JSX.HTMLAttributes<HTMLDivElement>,\n  \"children\"\n> & {\n  closeOnClickOutside?: boolean;\n  closeOnEsc?: boolean;\n  open?: boolean;\n  noPortal?: boolean;\n  children: WrappedElement<WrappedModalContentProps> | JSX.Element;\n};\n\nlet modalCount = 0;\n\nexport const Modal = (props: ModalProps): JSX.Element => {\n  const [local, containerProps] = splitProps(props, [\n    \"open\",\n    \"noPortal\",\n    \"children\",\n  ]);\n  const [open, setOpen] = createSignal(local.open);\n  const toggle = (open?: boolean) =>\n    setOpen(typeof open === \"boolean\" ? open : (o) => !o);\n  const modalContent = createMemo(() =>\n    getElements(\n      local.children,\n      (node) => node.className.indexOf(\"sb-modal-content\") !== -1,\n      [{ open, toggle }]\n    ) ?? []\n  );\n  const otherChildren = createMemo(() =>\n    getElements(\n      local.children,\n      (node) => node.className.indexOf(\"sb-modal-content\") === -1,\n      [{ open, toggle }]\n    )\n  );\n\n  let modalRef!: HTMLDivElement;\n  createEffect(() => open() && (modalRef?.focus(), modalRef?.scrollIntoView()));\n\n  modalCount++;\n\n  createEffect(() => {\n    if (!modalRef) {\n      return;\n    }\n    const header = modalRef.querySelector(\".sb-modal-header\");\n    if (header) {\n      modalRef.setAttribute(\n        \"aria-labelledby\",\n        header.id || (() => (header.id = `sb-modal-header-${modalCount}`))()\n      );\n    }\n    const body = modalRef.querySelector(\".sb-modal-body\");\n    if (body) {\n      modalRef.setAttribute(\n        \"aria-describedby\",\n        body.id || (() => (body.id = `sb-modal-body-${modalCount}`))()\n      );\n    }\n  });\n\n  const divProps = mergeProps(containerProps, {\n    role: \"dialog\",\n    tabIndex: -1,\n    class: props.class ? `sb-modal ${props.class}` : \"sb-modal\",\n    children: modalContent(),\n    onClick: createMemo(() =>\n      props.closeOnClickOutside\n        ? (ev: MouseEvent) => {\n            const target = ev.target as HTMLElement;\n            if (!modalContent().some((content) => content?.contains(target))) {\n              toggle(false);\n            }\n          }\n        : undefined\n    )(),\n    onkeyup: createMemo(() =>\n      props.closeOnEsc !== false\n        ? (ev: KeyboardEvent) => {\n            console.log(ev);\n            if (ev.key === \"Escape\" && !ev.defaultPrevented) {\n              setOpen(false);\n            }\n          }\n        : undefined\n    )(),\n  });\n\n  return (\n    <Switch>\n      <Match when={!open()}>{otherChildren()}</Match>\n      <Match when={open() && local.noPortal}>\n        <>\n          {otherChildren()}\n          <div ref={modalRef} {...divProps} />\n        </>\n      </Match>\n      <Match when={open() && !local.noPortal}>\n        <>\n          {otherChildren()}\n          <Portal mount={document.body}>\n            <div ref={modalRef} {...divProps} />\n          </Portal>\n        </>\n      </Match>\n    </Switch>\n  );\n};\n\nexport type ModalContentProps = JSX.HTMLAttributes<HTMLDivElement>;\n\nexport const ModalContent: Component<ModalContentProps> = (props) => (\n  <div\n    {...props}\n    class={props.class ? `sb-modal-content ${props.class}` : \"sb-modal-content\"}\n  />\n);\n\nexport type ModalHeaderProps = JSX.HTMLAttributes<HTMLElement>;\n\nexport const ModalHeader: Component<ModalHeaderProps> = (props) => (\n  <header\n    {...props}\n    class={props.class ? `sb-modal-header ${props.class}` : \"sb-modal-header\"}\n  />\n);\n\nexport type ModalBodyProps = JSX.HTMLAttributes<HTMLElement>;\n\nexport const ModalBody: Component<ModalBodyProps> = (props) => (\n  <main\n    {...props}\n    class={props.class ? `sb-modal-body ${props.class}` : \"sb-modal-body\"}\n  />\n);\n\nexport type ModalFooterProps = JSX.HTMLAttributes<HTMLElement>;\n\nexport const ModalFooter: Component<ModalFooterProps> = (props) => (\n  <footer\n    {...props}\n    class={props.class ? `sb-modal-footer ${props.class}` : \"sb-modal-footer\"}\n  />\n);\n","import { Component, JSX } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./progress.css\";\n\nexport type ProgressProps = JSX.ProgressHTMLAttributes<HTMLProgressElement>;\n\nexport const Progress: Component<ProgressProps> = (props) => (\n  <progress\n    aria-busy={props?.value !== props?.max}\n    aria-live=\"polite\"\n    {...props}\n    class={props.class ? `sb-progress ${props.class}` : \"sb-progress\"}\n  />\n);\n","import {\n  Component,\n  JSX,\n  splitProps,\n  Show,\n  createEffect,\n  onMount,\n} from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./radio.css\";\n\nexport type RadioProps = JSX.HTMLAttributes<HTMLLabelElement> &\n  JSX.HTMLAttributes<HTMLInputElement> & {\n    /**\n     * align the checkbox inside its label\n     * can be 'left' or 'right; default is 'left'\n     */\n    align?: \"left\" | \"right\";\n    autofocus?: boolean;\n    checked?: boolean;\n    disabled?: boolean;\n    name?: string;\n    oninvalid?: JSX.EventHandler<HTMLInputElement, Event>;\n    required?: boolean;\n    value?: string;\n  };\n\nexport const Radio: Component<RadioProps> = (props) => {\n  const [inputProps, content, labelProps] = splitProps(\n    props,\n    [\n      \"accessKey\",\n      \"align\",\n      \"aria-disabled\",\n      \"autofocus\",\n      \"checked\",\n      \"class\",\n      \"disabled\",\n      \"id\",\n      \"name\",\n      \"onchange\",\n      \"onclick\",\n      \"onkeydown\",\n      \"onkeypress\",\n      \"onkeyup\",\n      \"oninvalid\",\n      \"required\",\n      \"value\",\n    ],\n    [\"align\", \"children\"]\n  );\n\n  return (\n    <label\n      class={`${content.align || \"left\"} sb-radio${\n        inputProps.disabled ? \" disabled\" : \"\"\n      }`}\n      {...labelProps}\n    >\n      <Show when={content.align === \"right\"}>{content.children}</Show>\n      <input type=\"radio\" {...inputProps} />\n      <Show when={content.align !== \"right\"}>{content.children}</Show>\n    </label>\n  );\n};\n\nexport type RadioGroupProps = Omit<\n  JSX.HTMLAttributes<HTMLDivElement>,\n  \"onchange\"\n> & {\n  onchange?: (value: string) => void;\n  value?: string;\n};\n\nlet radioGroups = 1;\n\nexport const RadioGroup: Component<RadioGroupProps> = (props) => {\n  const [local, divProps] = splitProps(props, [\n    \"onchange\",\n    \"value\",\n    \"children\",\n  ]);\n\n  let group!: HTMLDivElement;\n  onMount(() => {\n    const items = group.querySelectorAll('input[type=\"radio\"]');\n    if (\n      Array.prototype.some.call(items, (item) => !item.hasAttribute(\"name\"))\n    ) {\n      const name = (\n        Array.prototype.find.call(items, (item) =>\n          item.hasAttribute(\"name\")\n        ) || { name: `sb-radio-group-${radioGroups++}` }\n      ).name;\n      Array.prototype.forEach.call(items, (item) => {\n        item.setAttribute(\"name\", name);\n      });\n    }\n  });\n  createEffect(() => {\n    if (local.value) {\n      const items = group.querySelectorAll('input[type=\"radio\"]');\n      Array.prototype.forEach.call(items, (item) => {\n        item.checked = item.value === local.value;\n      });\n    }\n  });\n\n  let value = local.value;\n  const changeHandler = () => {\n    const newValue = group?.querySelector<HTMLInputElement>('input[type=\"radio\"]:checked')?.value;\n    if (newValue && value !== newValue) {\n      local.onchange?.(newValue);\n      value = newValue;\n    }\n  };\n\n  return (\n    <div\n      ref={group}\n      role=\"radiogroup\"\n      onkeyup={changeHandler}\n      onclick={changeHandler}\n      {...divProps}\n      class={\n        divProps.class ? `sb-radiogroup ${divProps.class}` : \"sb-radiogroup\"\n      }\n    >\n      {local.children}\n    </div>\n  );\n};\n","import { Component, JSX, splitProps, onMount } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./select.css\";\n\nexport type SelectProps = Omit<\n  JSX.SelectHTMLAttributes<HTMLSelectElement>,\n  \"onchange\"\n> & { label: JSX.Element; onchange?: (value: string) => void };\n\nexport const Select: Component<SelectProps> = (props) => {\n  const [local, fieldProps] = splitProps(props, [\n    \"label\",\n    \"onchange\",\n    \"aria-orientation\",\n  ]);\n  return (\n    <label\n      classList={{ \"sb-select\": true, disabled: props.disabled }}\n      aria-orientation={local[\"aria-orientation\"]}\n    >\n      <span class=\"sb-select-label\">{local.label}</span>\n      <select\n        {...fieldProps}\n        onchange={(ev) => local.onchange?.((ev.target as HTMLSelectElement).value)}\n      />\n    </label>\n  );\n};\n","import { Component, JSX } from \"solid-js\";\n\nimport \"./base.css\";\nimport \"./spinner.css\";\n\nexport type SpinnerProps = JSX.HTMLAttributes<HTMLProgressElement>;\n\nexport const Spinner: Component<SpinnerProps> = (props) => (\n  <progress\n    class={props.class ? `sb-spinner ${props.class}` : \"sb-spinner\"}\n    aria-busy=\"true\"\n    aria-live=\"polite\"\n    {...props}\n  />\n);\n","import {\n  createSignal,\n  createEffect,\n  Component,\n  JSX,\n  createMemo,\n  mergeProps,\n} from \"solid-js\";\nimport { getElements, getNearestNode } from \"./tools\";\nimport \"./base.css\";\nimport \"./tabs.css\";\n\nexport type TabsProps = Omit<JSX.HTMLAttributes<HTMLElement>, 'onchange'> & {\n  index?: number;\n  vertical?: boolean;\n  onchange?: (index?: number) => void;\n};\n\nconst setTabState = (tab: HTMLElement, nr: number, index: number) => {\n  const selected = nr === index;\n  if (\n    tab?.getAttribute &&\n    (tab.getAttribute(\"aria-selected\") === \"true\") !== selected\n  ) {\n    tab.setAttribute(\"aria-selected\", selected ? \"true\" : \"false\");\n    tab.setAttribute(\"tabIndex\", selected ? \"-1\" : \"0\");\n  }\n};\n\nconst setPanelState = (panel: HTMLElement, nr: number, index: number) => {\n  if (panel?.hasAttribute && panel.hasAttribute(\"hidden\") === (nr === index)) {\n    panel[nr === index ? \"removeAttribute\" : \"setAttribute\"](\n      \"hidden\",\n      \"hidden\"\n    );\n  }\n};\n\nexport const Tabs: Component<TabsProps> = (props) => {\n  const [selected, setSelected] = createSignal(props.index ?? 0);\n  const tabs = createMemo(() => getElements(props.children, \"LI\") || []);\n  const panels = createMemo(() => getElements(props.children, \"DIV\") || []);\n\n  createEffect(() => {\n    if (tabs().length !== panels().length) {\n      console.warn(\n        `solid-blocks tabs: items count mismatch: ${tabs().length} tabs and ${\n          panels().length\n        }`\n      );\n    }\n    const index = selected() % tabs().length;\n    props.onchange?.(index);\n    tabs().forEach((tab, nr) => {\n      const elem = tab as HTMLLIElement;\n      setTabState(elem, nr, index);\n    });\n    panels().forEach((panel, nr) => {\n      const elem = panel as HTMLDivElement;\n      setPanelState(elem, nr, index);\n    });\n  });\n\n  const clickHandler = (ev: MouseEvent) => {\n    const tab = getNearestNode(ev.target, \"LI\") as HTMLLIElement | undefined;\n    if (!tab) {\n      return;\n    }\n    const index = Array.prototype.indexOf.call(tab.parentNode?.childNodes, tab);\n    if (index !== -1) {\n      setSelected(Number(index));\n    }\n  };\n  const keyupHandler = (ev: KeyboardEvent) => {\n    const tab = getNearestNode(ev.target, \"LI\") as HTMLLIElement | undefined;\n    const tabs = tab?.parentElement?.childNodes ?? [];\n    const index = Array.prototype.indexOf.call(tabs, tab);\n    if (index !== -1) {\n      if (ev.key === \" \") {\n        setSelected(index);\n      } else if (ev.key === \"ArrowLeft\" && index !== 0) {\n        setSelected(index - 1);\n        (tabs[index - 1] as HTMLLIElement).focus();\n      } else if (ev.key === \"ArrowRight\" && index + 1 < tabs.length) {\n        setSelected(index + 1);\n        (tabs[index + 1] as HTMLLIElement).focus();\n      }\n    }\n  };\n\n  return (\n    <section classList={mergeProps(props.classList ?? {}, { \"sb-tabs\": true })}>\n      <ul\n        role=\"tablist\"\n        aria-orientation={!props.vertical ? \"horizontal\" : \"vertical\"}\n        onClick={clickHandler}\n        onKeyUp={keyupHandler}\n      >\n        {tabs()}\n      </ul>\n      {panels()}\n    </section>\n  );\n};\n\nexport type TabProps = JSX.HTMLAttributes<HTMLLIElement>;\n\nexport const Tab: Component<TabProps> = (props) => {\n  return <li role=\"tab\" tabindex=\"0\" {...props} />;\n};\n\nexport type TabContainerProps = JSX.HTMLAttributes<HTMLDivElement>;\n\nexport const TabContainer: Component<TabContainerProps> = (props) => {\n  return <div role=\"tabpanel\" {...props} />;\n};\n\ntype x = ReturnType<typeof TabContainer>;\n","import { Component, JSX, mergeProps, splitProps, Show } from \"solid-js\";\n\nimport { getRandom } from \"./tools\";\n\nimport \"./base.css\";\nimport \"./tag.css\";\n\nexport type TagProps = (JSX.HTMLAttributes<HTMLSpanElement> &\n  Partial<JSX.AnchorHTMLAttributes<HTMLAnchorElement>>) & { plain?: boolean };\n\nexport const Tag: Component<TagProps> = (props) => {\n  const [local, tagProps] = splitProps(props, [\"plain\"]);\n  const mergedProps = mergeProps(\n    {\n      \"data-random\": local.plain ? undefined : getRandom(),\n      rel: props.target ? \"tag noopener\" : \"tag\",\n    },\n    tagProps,\n    { class: props.class ? `sb-tag ${props.class}` : \"sb-tag\" }\n  );\n  return (\n    <Show\n      when={typeof mergedProps.href === \"string\"}\n      fallback={<span {...mergedProps} />}\n    >\n      <a {...mergedProps} />\n    </Show>\n  );\n};\n\nexport type TagGroupProps = JSX.HTMLAttributes<HTMLDivElement>;\n\nexport const TagGroup: Component<TagGroupProps> = (props) => {\n  return (\n    <div\n      {...props}\n      class={props.class ? `sb-tag-group ${props.class}` : \"sb-tag-group\"}\n    />\n  );\n};\n","import { Component, createMemo, JSX, splitProps, mergeProps } from \"solid-js\";\nimport { Dynamic } from \"solid-js/web\";\n\nimport \"./base.css\";\nimport \"./textfield.css\";\n\nexport type TextFieldType =\n  | \"text\"\n  | \"color\"\n  | \"date\"\n  | \"datetime-local\"\n  | \"email\"\n  | \"file\"\n  | \"month\"\n  | \"number\"\n  | \"password\"\n  | \"range\"\n  | \"search\"\n  | \"tel\"\n  | \"time\"\n  | \"url\"\n  | \"week\";\n\ntype TextFieldProps = {\n  \"aria-orientation\"?: \"horizontal\" | \"vertical\";\n  multiline?: boolean;\n  label: JSX.Element;\n  type?: TextFieldType;\n  onchange?: (value: string) => void;\n} & Omit<\n  JSX.InputHTMLAttributes<HTMLInputElement> &\n    JSX.TextareaHTMLAttributes<HTMLTextAreaElement>,\n  \"onchange\"\n>;\n\nexport const TextField: Component<TextFieldProps> = (props) => {\n  const [local, fieldProps] = splitProps(props, [\n    \"aria-orientation\",\n    \"classList\",\n    \"label\",\n    \"multiline\",\n    \"onchange\",\n    \"children\",\n  ]);\n  const changeHandler = createMemo(() => (ev: InputEvent) => \n    local.onchange?.((ev.target as HTMLInputElement | HTMLTextAreaElement).value));\n\n  return (\n    <label\n      classList={mergeProps(local.classList ?? {}, { \"sb-textfield\": true })}\n      aria-orientation={props[\"aria-orientation\"]}\n    >\n      <span class=\"sb-textfield-label\">{local.label}</span>\n      <Dynamic\n        component={props.multiline ? 'textarea' : 'input'}\n        onchange={changeHandler()}\n        {...fieldProps}\n        type={!props.multiline ? fieldProps.type ?? 'text' : undefined}\n      />      \n      {local.children}\n    </label>\n  );\n};\n","import {\n  createEffect,\n  createSignal,\n  JSX,\n  onMount,\n  Show,\n  Setter,\n  splitProps,\n  createMemo,\n} from \"solid-js\";\nimport { isServer, Portal } from \"solid-js/web\";\nimport { getElements, WrappedElement } from \"./tools\";\n\nimport \"./base.css\";\nimport \"./toast.css\";\n\nconst toastPositions = [\n  \"top\",\n  \"top-right\",\n  \"top-left\",\n  \"bottom\",\n  \"bottom-right\",\n  \"bottom-left\",\n] as const;\n\nexport type ToastPosition = typeof toastPositions[number];\n\n// load previously created containers\nconst toastMountPoints = toastPositions.reduce((nodes, pos) => {\n  nodes[pos] = isServer ? null : document.getElementById(`sb-toast-${pos}`);\n  return nodes;\n}, {} as Partial<Record<ToastPosition, HTMLElement | null>>);\n\nexport type WrappedToastContentProps = {\n  update: Setter<JSX.Element | WrappedElement<WrappedToastContentProps>>;\n  hide: () => void;\n};\n\nexport type ToastProps = Omit<\n  JSX.HTMLAttributes<HTMLDivElement>,\n  \"children\"\n> & {\n  children: JSX.Element | WrappedElement<WrappedToastContentProps>;\n  /**\n   * the number of milliseconds until the toast should be hidden again;\n   * 0 means never, undefined 5 seconds\n   */\n  timeout?: number;\n  /** indicates where the toast should be rendered; default position will be top-right */\n  position?: ToastPosition;\n  mount?: HTMLElement;\n  onhide?: () => void;\n};\n\nconst div = document.createElement(\"div\");\n\nconst addMountPoint = (position: ToastPosition = \"top-right\") => {\n  const mountPoint = div.cloneNode() as HTMLDivElement;\n  mountPoint.id = `sb-toast-${position}`;\n  toastMountPoints[position] = mountPoint;\n  document.body.appendChild(mountPoint);\n  return mountPoint;\n};\n\nexport const Toast = (props: ToastProps): JSX.Element => {\n  const [local, divProps] = splitProps(props, [\n    \"timeout\",\n    \"position\",\n    \"children\",\n    \"mount\",\n    \"onhide\",\n  ]);\n  const mountPoint = createMemo(\n    () =>\n      local.mount ||\n      toastMountPoints[local.position || \"top-right\"] ||\n      addMountPoint(local.position)\n  );\n\n  const [visible, setVisible] = createSignal(true);\n  const hide = () => setVisible(false);\n  const [newChildren, update] = createSignal<JSX.Element>();\n  const [children, setChildren] = createSignal(\n    getElements(local.children, () => true, [{ update, hide }])\n  );\n\n  onMount(\n    () =>\n      props.timeout !== 0 &&\n      setTimeout(() => setVisible(false), props.timeout ?? 5000)\n  );\n\n  createEffect(() => {\n    newChildren() &&\n      setChildren(getElements(newChildren(), () => true, [{ update, hide }]));\n  });\n\n  createEffect(() => !visible() && props.onhide?.());\n\n  createEffect(() => {\n    const container = mountPoint();\n    if (container === props.mount) {\n      return;\n    }\n    if (!visible() && container?.childElementCount === 0) {\n      document.body.removeChild(container);\n    } else if (visible() && container && !container?.parentNode) {\n      document.body.appendChild(container);\n    }\n  });\n\n  return (\n    <Show when={visible()}>\n      <Portal mount={mountPoint()}>\n        <div\n          {...divProps}\n          class={divProps.class ? `sb-toast ${divProps.class}` : \"sb-toast\"}\n        >\n          {children()}\n        </div>\n      </Portal>\n    </Show>\n  );\n};\n","import {\n  Accessor,\n  Component,\n  createEffect,\n  createMemo,\n  createSignal,\n  splitProps,\n} from \"solid-js\";\nimport type { JSX } from \"solid-js\";\nimport \"./base.css\";\nimport \"./tooltip.css\";\n\nexport type TooltipTrigger =\n  | boolean\n  | \"focus\"\n  | \"hover\"\n  | Accessor<boolean>\n  | (\"focus\" | \"hover\" | Accessor<boolean>)[];\n\nexport type TooltipPosition = \"nw\" | \"n\" | \"ne\" | \"e\" | \"se\" | \"s\" | \"sw\" | \"w\";\n\nexport type TooltipProps = JSX.HTMLAttributes<HTMLSpanElement> & {\n  arrow?: boolean;\n  nowrap?: boolean;\n  position?: TooltipPosition;\n  content: JSX.Element;\n  trigger?: TooltipTrigger;\n};\n\ndeclare module \"solid-js\" {\n  namespace JSX {\n    interface CustomCaptureEvents {\n      focus: FocusEvent;\n      blur: FocusEvent;\n    }\n  }\n}\n\nconst computeVisible = (\n  trigger: TooltipTrigger | undefined,\n  initial?: boolean\n): boolean =>\n  trigger === undefined\n    ? false\n    : (Array.isArray(trigger) ? trigger : [trigger]).reduce<boolean>(\n        (visible: boolean, trigger: TooltipTrigger) =>\n          typeof trigger === \"boolean\"\n            ? trigger\n            : typeof trigger === \"function\"\n            ? trigger()\n            : visible,\n        initial ?? false\n      );\n\nconst triggerHas = (\n  trigger: TooltipProps[\"trigger\"] | undefined,\n  event: \"focus\" | \"hover\"\n) =>\n  trigger === undefined ||\n  trigger === event ||\n  (Array.isArray(trigger) && trigger.includes(event));\n\nconst wrapText = (children: JSX.Element): JSX.Element => {\n  if (typeof children === \"function\") {\n    return wrapText(children());\n  }\n  if (typeof children === \"string\") {\n    return (<span tabIndex=\"0\">{children}</span>);\n  }\n  if (Array.isArray(children)) {\n    const result = children.map((child) =>\n      typeof child === \"function\" ? child() : child\n    );\n    if (result.every((child) => typeof child === \"string\")) {\n      return (<span tabIndex=\"0\">{result}</span>);\n    }\n    return result;\n  }\n  return children;\n};\n\nexport const Tooltip: Component<TooltipProps> = (props) => {\n  let wrapperRef!: HTMLSpanElement;\n\n  const [local, spanProps] = splitProps(props, [\n    \"children\",\n    \"position\",\n    \"content\",\n    \"trigger\",\n    \"arrow\",\n    \"nowrap\",\n  ]);\n  const useFocus = createMemo(() => triggerHas(local.trigger, \"focus\"));\n  const useHover = createMemo(() => triggerHas(local.trigger, \"hover\"));\n  const children = createMemo(() =>\n    triggerHas(local.trigger, \"focus\")\n      ? wrapText(local.children)\n      : local.children\n  );\n  const [visible, setVisible] = createSignal(false);\n  createEffect(() => setVisible(computeVisible(local.trigger)));\n\n  const [positionStyle, setPositionStyle] = createSignal<JSX.CSSProperties>();\n\n  const focusHandler = createMemo(\n    () => (ev: FocusEvent) => useFocus() && setVisible(ev.type === \"focus\")\n  );\n  const hoverHandler = createMemo(\n    () => (ev: MouseEvent & { toElement?: HTMLElement }) =>\n      useHover() && setVisible(wrapperRef.contains((ev.toElement ?? ev.target) as Node | null))\n  );\n\n  createEffect(() => {\n    if (!visible() || !wrapperRef?.offsetHeight) {\n      return { top: \"10px\" };\n    }\n    setPositionStyle(\n      local.position === \"nw\"\n        ? {\n            top: `${wrapperRef.offsetTop}px`,\n            left: `${wrapperRef.offsetLeft}px`,\n          }\n        : local.position === \"n\"\n        ? {\n            top: `${wrapperRef.offsetTop}px`,\n            left: `${wrapperRef.offsetLeft + (wrapperRef.offsetWidth >> 1)}px`,\n          }\n        : local.position === \"ne\"\n        ? {\n            top: `${wrapperRef.offsetTop}px`,\n            left: `${wrapperRef.offsetLeft + wrapperRef.offsetWidth}px`,\n          }\n        : local.position === \"e\"\n        ? {\n            top: `${wrapperRef.offsetTop + (wrapperRef.offsetHeight >> 1)}px`,\n            left: `${wrapperRef.offsetLeft + wrapperRef.offsetWidth}px`,\n          }\n        : local.position === \"se\"\n        ? {\n            top: `${wrapperRef.offsetTop + wrapperRef.offsetHeight}px`,\n            left: `${wrapperRef.offsetLeft + wrapperRef.offsetWidth}px`,\n          }\n        : local.position === \"sw\"\n        ? {\n            top: `${wrapperRef.offsetTop + wrapperRef.offsetHeight}px`,\n            left: `${wrapperRef.offsetLeft}px`,\n          }\n        : local.position === \"w\"\n        ? {\n            top: `${wrapperRef.offsetTop + (wrapperRef.offsetHeight >> 1)}px`,\n            left: `${wrapperRef.offsetLeft}px`,\n          }\n        : /* s is default */ {\n            top: `${wrapperRef.offsetTop + wrapperRef.offsetHeight}px`,\n            left: `${wrapperRef.offsetLeft + (wrapperRef.offsetWidth >> 1)}px`,\n          }\n    );\n  });\n\n  return (\n    <span\n      ref={wrapperRef}\n      aria-haspopup=\"true\"\n      aria-expanded={visible()}\n      class={`sb-tooltip-wrapper position-${local.position ?? \"s\"}${\n        local.arrow === false ? \"\" : \" arrow\"\n      }${local.nowrap ? \" nowrap\" : \"\"}`}\n      oncapture:focus={focusHandler()}\n      oncapture:blur={focusHandler()}\n      onmouseover={hoverHandler()}\n      onmouseleave={hoverHandler()}\n    >\n      {children()}\n      <span\n        {...spanProps}\n        role=\"tooltip\"\n        hidden={!visible()}\n        style={positionStyle()}\n      >\n        {local.content}\n      </span>\n    </span>\n  );\n};\n"],"names":["Accordion","props","local","detailsProps","splitProps","open","setOpen","createSignal","detailsRef","children","createMemo","toggleHandler","ontoggle","onMount","addEventListener","onCleanup","mergeProps","classList","AccordionHeader","AccordionGroup","divProps","clickHandler","ev","target","details","getNearestNode","parentNode","querySelectorAll","length","allowMultiple","Array","prototype","forEach","call","item","removeAttribute","allowToggle","preventDefault","keyupHandler","grouped","index","indexOf","key","detail","summary","querySelector","focus","click","char","initialsRegexp","RegExp","getInitials","name","replace","toUpperCase","Avatar","initials","img","getRandom","fallback","AvatarBadge","spanProps","composedStyle","composeStyles","style","borderColor","background","AvatarGroup","isArray","Bar","rest","class","placement","position","portal","mount","Breadcrumbs","Button","buttonProps","variant","Checkbox","inputProps","content","labelProps","changeHandler","onchange","checked","align","switch","undefined","Message","messageProps","className","Set","type","inline","filter","Boolean","join","Meter","value","min","max","getFirstMenuButton","counter","node","isButton","nodeName","getAttribute","isMenuButton","isFirstMenuButton","setAttribute","getMenuItems","Menu","opener","getElements","menuItems","menuRef","createEffect","visible","role","button","defaultPrevented","contains","document","capture","removeEventListener","focusItem","overHandler","includes","tabIndex","moveFocus","step","currentPos","findIndex","newPos","keyHandler","radios","MenuButton","MenuItem","MenuItemGroup","title","MenuOptionsContext","createContext","console","warn","MenuOption","change","useContext","selected","MenuOptionGroup","setValue","equals","prev","next","lastVal","newVal","modalCount","Modal","containerProps","toggle","o","modalContent","otherChildren","modalRef","scrollIntoView","header","id","body","onClick","closeOnClickOutside","some","onkeyup","closeOnEsc","log","noPortal","ModalContent","ModalHeader","ModalBody","ModalFooter","Progress","Radio","disabled","radioGroups","RadioGroup","group","items","hasAttribute","find","newValue","Select","fieldProps","label","Spinner","setTabState","tab","nr","setPanelState","panel","Tabs","setSelected","tabs","panels","elem","childNodes","Number","parentElement","vertical","Tab","TabContainer","Tag","tagProps","mergedProps","plain","rel","href","TagGroup","TextField","multiline","toastPositions","toastMountPoints","reduce","nodes","pos","isServer","getElementById","div","createElement","addMountPoint","mountPoint","cloneNode","appendChild","Toast","setVisible","hide","newChildren","update","setChildren","timeout","setTimeout","onhide","container","childElementCount","removeChild","computeVisible","trigger","initial","triggerHas","event","wrapText","result","map","child","every","Tooltip","wrapperRef","useFocus","useHover","positionStyle","setPositionStyle","focusHandler","hoverHandler","toElement","offsetHeight","top","offsetTop","left","offsetLeft","offsetWidth","arrow","nowrap"],"mappings":"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"}